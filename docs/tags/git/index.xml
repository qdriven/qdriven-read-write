<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GIT on DirtyHands-Tester</title>
    <link>https://qdriven.github.io/tags/git/</link>
    <description>Recent content in GIT on DirtyHands-Tester</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>QDriven- All rights reserved</copyright>
    <lastBuildDate>Tue, 04 Aug 2020 09:17:08 +0000</lastBuildDate><atom:link href="https://qdriven.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Git Upstream/Patch Tips</title>
      <link>https://qdriven.github.io/blog/tips/git/git-tips-1/</link>
      <pubDate>Tue, 04 Aug 2020 09:17:08 +0000</pubDate>
      
      <guid>https://qdriven.github.io/blog/tips/git/git-tips-1/</guid>
      <description>Fork的Github仓库如何同步更新  添加原始的GITHUB仓库到upstream  # 查看所有的远程项目 git remote -v # 添加原始仓库成为upstream git remote add upstream https://github.</description>
    </item>
    
    <item>
      <title>修改Git提交人</title>
      <link>https://qdriven.github.io/blog/tips/git/git-tips-2/</link>
      <pubDate>Tue, 04 Aug 2020 09:17:08 +0000</pubDate>
      
      <guid>https://qdriven.github.io/blog/tips/git/git-tips-2/</guid>
      <description>修改Github仓库的提交人 有时突然发现自己的github仓库使用的名称不对，那么如何把已经提交变更人修改呢？
git filter-branch -f --env-filter &amp;#39; OLD_EMAIL=&amp;#34;&amp;lt;old@emai.</description>
    </item>
    
    <item>
      <title>测试日志2020-3 Github 访问速度缓慢解决</title>
      <link>https://qdriven.github.io/blog/tips/git/tips-github-slowdown/</link>
      <pubDate>Thu, 30 Jul 2020 12:12:00 +0000</pubDate>
      
      <guid>https://qdriven.github.io/blog/tips/git/tips-github-slowdown/</guid>
      <description>1. Github 访问速度缓慢解决 不知道什么原因，老鸟家里访问Github仓库速度缓慢，下载GITHUB仓库速度也是缓慢。 这种缓慢慢慢已经给老鸟造成了一些困扰. 但是问题是实际存在的，老鸟心里想一定需要解决.</description>
    </item>
    
    <item>
      <title>git stash 使用</title>
      <link>https://qdriven.github.io/blog/tips/git/git-tips-git-stash/</link>
      <pubDate>Mon, 20 Jan 2020 09:52:58 +0000</pubDate>
      
      <guid>https://qdriven.github.io/blog/tips/git/git-tips-git-stash/</guid>
      <description>git-stash 文档的说明有点抽象，下面用一些例子来解释如何使用git-stash。
git-stash - Stash the changes in a dirty working directory away git-stash 主要使用的场景如下：</description>
    </item>
    
    <item>
      <title>Git Sub Module Usage</title>
      <link>https://qdriven.github.io/blog/tips/git/0-git-submodule/</link>
      <pubDate>Sat, 20 Apr 2019 23:58:45 +0000</pubDate>
      
      <guid>https://qdriven.github.io/blog/tips/git/0-git-submodule/</guid>
      <description>Git Sub Module Usage A Git Repo sometimes has several sub projects which are also a git repo.</description>
    </item>
    
    <item>
      <title>Git 基本使用－2</title>
      <link>https://qdriven.github.io/blog/tips/git/git-history/</link>
      <pubDate>Fri, 22 Apr 2016 02:31:11 +0000</pubDate>
      
      <guid>https://qdriven.github.io/blog/tips/git/git-history/</guid>
      <description>GIT 基本使用  git log -p git diff git add git diff HEAD git commit -m &amp;ldquo;Add something&amp;rdquo; git branch git checkout -b feature-A git branch git merge &amp;ndash;no-ff feature-A git log &amp;ndash;graph git reset git reflog git merge &amp;ndash;no-ff fix-b git rebase -i HEAD-2 git remote add git push git push -u origin feature-D git fetch -all git fetch origin refspeec  GIT Flow git-flow-cheatsheet A cheatsheet on the usage of git flow, visit http://danielkummer.</description>
    </item>
    
    <item>
      <title>Git 基本使用</title>
      <link>https://qdriven.github.io/blog/tips/git/git-usage/</link>
      <pubDate>Sun, 24 Feb 2013 10:31:11 +0800</pubDate>
      
      <guid>https://qdriven.github.io/blog/tips/git/git-usage/</guid>
      <description>git是个分布式版本控制系统，所谓分布式版本控制就是任何一个在自己其实上就可以进行版本控制管理而无需连接中央服务器，这样提交代码就无需收到联网的限制。同时GIT提供了更好的branch等功能，也是目前最流行的工具.
Git 配置 全局变量设置：
git config --global user.</description>
    </item>
    
  </channel>
</rss>
